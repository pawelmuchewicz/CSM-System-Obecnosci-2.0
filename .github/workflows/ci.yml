name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type checking
        run: npm run check

      - name: Run tests
        run: npm test

      - name: Upload test coverage (if exists)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
          if-no-files-found: ignore

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/
          retention-days: 7

  deploy:
    name: Deploy to Coolify
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Trigger Coolify deployment
        run: |
          echo "üöÄ Deployment to Coolify will be triggered"
          echo "Note: Configure Coolify webhook in repository settings"
          echo "Webhook URL should be set as COOLIFY_WEBHOOK_URL secret"

      # Uncomment when you have Coolify webhook configured
      # - name: Deploy via webhook
      #   run: |
      #     curl -X POST ${{ secrets.COOLIFY_WEBHOOK_URL }}

  notify:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [test, build]
    if: failure()

    steps:
      - name: Send notification
        run: |
          echo "‚ùå CI/CD Pipeline failed!"
          echo "Check the logs for details"

      # Optional: Add Slack/Discord notification
      # - name: Slack Notification
      #   uses: 8398a7/action-slack@v3
      #   with:
      #     status: ${{ job.status }}
      #     webhook_url: ${{ secrets.SLACK_WEBHOOK }}
